name: Build LX Images
on:
    push:
        paths-ignore:
            - '**.md'
        branches:
            - master
jobs:
    prepare:
        name: Create Release
        runs-on: ubuntu-latest
        outputs:
            upload_url: ${{ steps.create_release.outputs.upload_url }}
            tag: ${{ steps.build_tag.outputs.tag }}
        steps:
            - name: Create Time Stamp Tag
              id: build_tag
              run: date +'::set-output name=tag::%Y-%m-%d_%H-%M-%S'

            - name: Create Release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ steps.build_tag.outputs.tag }}
                  release_name: Release ${{ steps.build_tag.outputs.tag }}
                  draft: false
                  prerelease: false

    lx-image-build:
        needs: prepare
        strategy:
            matrix:
                IMAGE:
                    - unifi-controller
                    - sonarr
                    - radarr
                    - tautulli

        name: Build ${{ matrix.IMAGE }} image
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Build Image
              id: build_image
              run: |
                  ./setup.sh ${{ matrix.IMAGE }}
                  cd ${{ matrix.IMAGE }}
                  tar=lx-${{ matrix.IMAGE }}.tar
                  tag=release:$$
                  docker build --tag $tag .
                  container=$(docker create $tag)
                  docker cp $container:. - > $tar
                  docker rm $container
                  docker rmi $tag
                  xz $tar
            - name: Upload Release Asset
              id: upload_release_asset
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ needs.prepare.outputs.upload_url }}
                  asset_path: ./${{ matrix.IMAGE }}/lx-${{ matrix.IMAGE }}.tar.xz
                  asset_name: lx-${{ matrix.IMAGE }}-${{ needs.prepare.outputs.tag }}.tar.xz
                  asset_content_type: application/x-xz

